1	Full lifecycle of a microservice: from fault-tolerant and reliable architecture to delivery	 

1.1	Microservices: implementing  the “database per service” pattern	 

1.2	Implementing  a microservice with Spring Boot	 
1.2.1	Backing Service integration and configuration	 
1.2.2	Implementing  the spring profile pattern  
1.2.3	How to create a backing services in Pivotal Cloud Foundry	 
1.2.4	How to bind a backing services (PAAS CONNECTOR	/ JAVA CONFIGURATION)	
1.2.5	Define an automated build (Jenkins@Openshift) and promote the docker image in container registry (DockerHub)

1.3	Interactions between Microservices: service discovery and service registration with Spring Cloud	 
1.3.1	Eureka service  registry  
1.3.2	How to implement  and register a server application  inside Eureka  
1.3.3	Implementing a client application that consume an Eureka server application  

1.4	Solution delivery  
1.4.1	In a Cloud Environment: Pivotal Cloud Foundry
1.4.2	As a docker container   

